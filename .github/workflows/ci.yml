# Stable v0.8 — 2025-10-19
# CI/CD Pipeline for Kori (Monorepo)
# Changelog v0.8:
# - Remove setup-node cache:pnpm (it needs pnpm preinstalled and was failing)
# - Install pnpm first (standalone) and export PATH explicitly
# - Add actions/cache AFTER pnpm is installed using the actual pnpm store path

name: CI

on:
  push:
    branches:
      - main
      - "**/*"
      - "*"
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          # NOTE: no cache here — it was invoking pnpm before we installed it

      # --- Install pnpm first (standalone) and add to PATH ---
      - name: Install pnpm (standalone) and export PATH
        shell: bash
        run: |
          set -euo pipefail
          curl -fsSL https://get.pnpm.io/install.sh | SHELL=bash bash -s -- --version 9
          echo "$HOME/.local/share/pnpm" >> "$GITHUB_PATH"
          ~/.local/share/pnpm/pnpm -v

      # --- (Optional) Restore pnpm store cache now that pnpm exists ---
      - name: Resolve pnpm store path
        id: pnpm_store
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_ENV"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Show tool versions
        shell: bash
        run: |
          node -v
          pnpm -v

      - name: Install dependencies (workspace)
        shell: bash
        run: pnpm install --frozen-lockfile

      - name: Prepare API env (non-secret)
        shell: bash
        run: |
          if [ -f apps/api/.env.example ]; then cp apps/api/.env.example apps/api/.env; fi

      - name: Typecheck
        shell: bash
        run: pnpm -r typecheck

      - name: Build
        shell: bash
        run: pnpm -r build

      - name: Test
        shell: bash
        run: pnpm -r test --if-present

      - name: Upload web dist
        if: ${{ always() && hashFiles('apps/web/dist/**') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: apps/web/dist
          if-no-files-found: ignore

      - name: Upload api dist
        if: ${{ always() && hashFiles('apps/api/dist/**') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: api-dist
          path: |
            apps/api/dist
            apps/api/prisma/**
          if-no-files-found: ignore
